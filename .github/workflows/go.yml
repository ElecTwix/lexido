name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        go-version: [1.20]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Build
        run: |
          env GOOS=${{ matrix.os == 'ubuntu-latest' ? 'linux' : 'darwin' }} GOARCH=amd64 go build -v -o ${{ github.repository }}-${{ github.sha }}-${{ matrix.os == 'ubuntu-latest' ? 'linux' : 'darwin' }}-amd64
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} 
          asset_path: "./${{ github.repository }}-${{ github.sha }}-${{ matrix.os == 'ubuntu-latest' ? 'linux' : 'darwin' }}-amd64"
          asset_name: "${{ github.repository }}-${{ github.sha }}-${{ matrix.os == 'ubuntu-latest' ? 'linux' : 'darwin' }}-amd64"
          asset_content_type: application/octet-stream

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
